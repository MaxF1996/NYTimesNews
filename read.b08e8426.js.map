{"mappings":"AAAW,SAASA,EAAQC,GAExB,OAAOA,EAAOC,QADO,IACiBD,EAAQA,EAAOE,MAAM,EADtC,KACyD,K,CAGzE,SAASC,EAASH,GAEvB,OAAOA,EAAOC,OADO,GACgBD,EAAQA,EAAOE,MAAM,EADrC,IACwD,K,CAOvE,SAASE,EAAWJ,GAC5B,IAAKA,EAAQ,OAAO,KAChB,MAAMK,EAAU,IAAIC,KAAKN,GACrBO,EAAOF,EAAQG,cACrB,IAAIC,EAAKJ,EAAQK,WAAa,EAC1BC,EAAKN,EAAQO,UAEbD,EAAK,KAAIA,EAAK,IAAMA,GACpBF,EAAK,KAAIA,EAAK,IAAMA,GAExB,MADY,IAAIE,EAAK,IAAMF,EAAK,IAAMF,E,CCrBhB,MASnBM,EAAOC,IACb,IACE,MAAMC,EAAkBC,aAAaC,QAAQH,GAClB,cAApBC,OAA2BG,EAAYC,KAAKC,MAAML,E,CAGzD,MAAOM,GACPC,QAAQD,MAAM,oBAAqBA,EAAME,Q,GChBrC,SAASC,GAAWC,aACzBA,EAAYC,QACZA,EAAOC,SACPA,EAAQC,eACRA,EAAcC,SACdA,EAAQC,WACRA,EAAUC,QACVA,IAEA,MAAO,0VAUGD,EAAW,GAAGE,4BACSD,0DACFN,ohBAWnBtB,EAASwB,EAASM,sEAGpBlC,EAAQ6B,wFAGexB,EAAWyB,8CAEzBH,wM,CAWd,SAASQ,GAAcC,MAC5BA,EAAKC,MACLA,EAAKC,QACLA,EAAOC,WACPA,EAAUC,SACVA,EAAQC,eACRA,EAAcR,IACdA,IAEA,MAAO,kUAUIG,EAAM,GAEHA,EAAM,GAAG,kBAAkB,GAAGH,IAD9B,wHAGXG,EAAM,GAAiBA,EAAM,GAAGM,QAArB,kEAEiBJ,GAAWC,ohBAW9BnC,EAASiC,mEAGXrC,EAAQwC,wFAGenC,EAAWoC,8CAEzBR,wM,CC9FrB,MAAMU,EAAWC,SAASC,cAAc,SAgCfC,OAAlBC,iBAAiB,oBAGgB,WACtCxB,QAAQyB,IAAI,wBAEZ,MAAMC,EAAenC,EArCH,QAuClB,QAAqBK,IAAjB8B,EAA4B,CAED,IAAzBC,EAAmB,GAGrBA,EADEC,OAAOC,KAAKH,GAAcI,SAAS,YAClBJ,EAAaK,MAAK,CAACC,EAAGC,IACvCA,EAAE1B,SAAS2B,cAAcF,EAAEzB,YAGVmB,EAAaK,MAAK,CAACC,EAAGC,IACvCA,EAAEf,eAAegB,cAAcF,EAAEd,kBAGrClB,QAAQyB,IAAI,SAAUE,GAEtB,IAAIQ,EAAc,KACdC,EAAS,GAEbT,EAAiBU,SAAQC,IACvB,IAAIC,EAAOD,EAAK/B,UAAY+B,EAAKpB,eAE7BiB,IAAgBI,IACE,OAAhBJ,IACFC,GAAU,UAEZD,EAAcI,EACdH,GAe0B,SAAPG,GACzB,MAAO,uIAIkBzD,EAAWyD,iGAE0BA,8FAGdA,K,CAzBhCC,CAAkBD,IAG1BX,OAAOC,KAAKF,GAAkBG,SAAS,YACzCM,GAAUlC,EAAWoC,GAErBF,GAAUxB,EAAc0B,EAAK,IAGjCF,GAAU,SACVhB,EAASqB,mBAAmB,YAAaL,E,CAmBvBf,SAASqB,iBAAiB,aAClCL,SAAQM,IAClB,MAAMC,EAAcvB,SAASwB,eAAe,iBAAmBF,EAAOG,IACtEH,EAAOnB,iBAAiB,SAASuB,IAC/BH,EAAYI,UAAUC,OAAO,UAC7BN,EAAOK,UAAUC,OAAO,gBACxBN,EAAOK,UAAUC,OAAO,iBAAiB,GACzC,G","sources":["src/js/markupUtils.js","src/js/localStorageService.js","src/js/cardMarkup.js","src/js/onReadLink.js"],"sourcesContent":["    export function cutText(string){\n    const quantityChar = 115\n    return string.length <= quantityChar? string :string.slice(0, quantityChar) + '...'\n  }\n  \n  export function cutTitle(string){\n    const quantityChar = 72\n    return string.length < quantityChar? string :string.slice(0, quantityChar) + '...'\n  }\n  \n  export function updateMarkup(markup, elem){\n    elem.innerHTML= markup;\n    }\n  \n   export function formatDate(string){\n\t\tif (!string) return null;\n      const pubDate = new Date(string);\n    const yyyy = pubDate.getFullYear();\n    let mm = pubDate.getMonth() + 1;\n    let dd = pubDate.getDate();\n    \n    if (dd < 10) dd = '0' + dd;\n    if (mm < 10) mm = '0' + mm;\n    const str = `${ dd + '/' + mm + '/' + yyyy }`\n    return str\n    }","// Стандартні методи для роботи з Local Storage\n\nconst save = (key, value) => {\n\ttry {\n\t  const serializedState = JSON.stringify(value); //получаем и преобразуем в JSON значение\n\t  localStorage.setItem(key, serializedState); //сохраняем значение в локальное хранилище\n\t} catch (error) {\n\t  console.error('Set state error: ', error.message);\n\t}\n };\n \n const load = key => {\n\ttry {\n\t  const serializedState = localStorage.getItem(key); //получаем значение из хранилища\n\t  return serializedState === null ? undefined : JSON.parse(serializedState); //если в хранилище нет\n\t  //записи с таким ключом, метод возвращает null. Когда значение это обычнаяс строка -\n\t  //нет необходимости её парсить\n\t} catch (error) {\n\t  console.error('Get state error: ', error.message);\n\t}\n };\n \n const remove = key => {\n\ttry {\n\t  const serializedState = localStorage.removeItem(key);\n\t} catch (error) {\n\t  console.error('Remove state error: ', error.message);\n\t}\n };\n \n export { save, load, remove };","import { cutText, cutTitle, formatDate } from './markupUtils';\n\nexport function createCard({\n  section_name,\n  web_url,\n  headline,\n  lead_paragraph,\n  pub_date,\n  multimedia,\n  snippet,\n}) {\n  return `\n        <li class=\"news-item\">\n        <div class=\"overlay\"></div>\n        <div class=\"img-thumb\">\n        <span class=\"readable\"\n        >Already read\n        <svg class=\"icon-done\" width=\"18\" height=\"18\"><use\n        href=\"/sprite.f14d31f7.svg#arrow-done\"></use></svg>\n          </span>\n          <img src=\"https://www.nytimes.com/${\n            multimedia[0].url\n          }\" loading=\"lazy\" alt=\"${snippet}\" class=\"news-img\" />\n          <p class=\"news-chip\">${section_name}</p>\n          <button type=\"button\" class=\"add-news-favorite\">\n            <p class=\"favorite-btn-text\">Add to favorite</p>\n            <svg class=\"favorite-icon\" width=\"16\" height=\"16\">\n             <use href=\"/sprite.f14d31f7.svg#heart-empty\" class=\"icon-empty-heart\"></use>  \n             <use href=\"/sprite.f14d31f7.svg#heart-fill\" class=\"icon-heart\"></use>  \n                </svg> \n          </button>\n        </div>\n        <div class=\"news-info\">\n          <h2 class=\"news-title disable-scroll\">\n            ${cutTitle(headline.main)}\n          </h2>\n          <p class=\"news-desk\">\n          ${cutText(lead_paragraph)}\n          </p>\n          <div class=\"adding\">\n            <p class=\"news-date\">${formatDate(pub_date)}</p>\n            <a\n              href=${web_url}\n              class=\"news-link\"\n              target=\"_blank\"\n              rel=\"noopener noreferrer\"\n              >Read more</a\n            >\n          </div>\n        </div>\n      </li> `;\n}\n\nexport function createCardPop({\n  media,\n  title,\n  section,\n  subsection,\n  abstract,\n  published_date,\n  url,\n}) {\n  return `\n        <li class=\"news-item\">\n        <div class=\"overlay\"></div>\n        <div class=\"img-thumb\">\n        <span class=\"readable\"\n        >Already read\n        <svg class=\"icon-done\" width=\"18\" height=\"18\"><use\n        href=\"/sprite.f14d31f7.svg#arrow-done\"></use></svg>\n          </span>\n          <img src=\"${\n            !media[0]\n              ? 'https://raw.githubusercontent.com/MaxF1996/NYTimesNews/main/src/images/The_New_York_Times.jpg'\n              : media[0]['media-metadata'][2].url\n          }\" loading=\"lazy\" alt=\"${\n    !media[0] ? 'NYTimes' : media[0].caption\n  }\" class=\"news-img\" />\n          <p class=\"news-chip\">${section || subsection}</p>\n          <button type=\"button\" class=\"add-news-favorite\">\n            <p class=\"favorite-btn-text\">Add to favorite</p>\n            <svg class=\"favorite-icon\" width=\"16\" height=\"16\">\n             <use href=\"/sprite.f14d31f7.svg#heart-empty\" class=\"icon-empty-heart\"></use>  \n             <use href=\"/sprite.f14d31f7.svg#heart-fill\" class=\"icon-heart\"></use>  \n                </svg> \n          </button>\n        </div>\n        <div class=\"news-info\">\n          <h2 class=\"news-title disable-scroll\">\n            ${cutTitle(title)}\n          </h2>\n          <p class=\"news-desk\">\n          ${cutText(abstract)}\n          </p>\n          <div class=\"adding\">\n            <p class=\"news-date\">${formatDate(published_date)}</p>\n            <a\n              href=${url}\n              class=\"news-link\"\n              target=\"_blank\"\n              rel=\"noopener noreferrer\"\n              >Read more</a\n            >\n          </div>\n        </div>\n      </li> `;\n}\n","import { formatDate } from './markupUtils';\nimport { save, load, remove } from './localStorageService';\nimport { createCard, createCardPop } from './cardMarkup';\nconst readList = document.querySelector('.read');\nconst STORAGE_KEY = 'read';\n// Фунція додає слухача на лінк 'Read more' на головній сторінці\nfunction addEvtListOnReadMore(articles) {\n  readMoreLinks = document.querySelectorAll('.news-link');\n\n  for (let i = 0; i < readMoreLinks.length; i++) {\n    let article = articles[i];\n\n    let link = readMoreLinks[i];\n\n    //функція додає прочитане на Local Storage\n    function addReadToStorage() {\n      const storageItems = load(STORAGE_KEY);\n      if (storageItems === undefined) {\n        save(STORAGE_KEY, [article]);\n      } else {\n        const itemIndex = storageItems.findIndex(\n          item => +item.title === +article.title\n        );\n        console.log('itemIndex', itemIndex);\n        if (itemIndex >= 0) {\n          storageItems.splice(itemIndex, 1);\n        }\n        storageItems.push(article);\n        save(STORAGE_KEY, storageItems);\n      }\n    }\n    link.addEventListener('click', addReadToStorage);\n  }\n}\n// Слухач, на відкриття сторінки\nwindow.addEventListener('DOMContentLoaded', addAllReadOnPage);\n\n//функція, яка додає статті зі сховища на сторінку\nfunction addAllReadOnPage() {\n  console.log('add All Read On Page');\n\n  const storageItems = load(STORAGE_KEY);\n  //   console.log(storageItems);\n  if (storageItems !== undefined) {\n    //сортуємо масив, отриманий з Local Storage по даті\n    let sortedStorageArr = '';\n\n    if (Object.keys(storageItems).includes('pub_date')) {\n      sortedStorageArr = storageItems.sort((a, b) =>\n        b.pub_date.localeCompare(a.pub_date)\n      );\n    } else {\n      sortedStorageArr = storageItems.sort((a, b) =>\n        b.published_date.localeCompare(a.published_date)\n      );\n    }\n    console.log('sorted', sortedStorageArr);\n\n    let currentDate = null;\n    let markup = '';\n\n    sortedStorageArr.forEach(item => {\n      let date = item.pub_date || item.published_date;\n\n      if (currentDate !== date) {\n        if (currentDate !== null) {\n          markup += '</div>'; //close current title\n        }\n        currentDate = date;\n        markup += createTitleMarcup(date);\n      }\n\n      if (Object.keys(sortedStorageArr).includes('pub_date')) {\n        markup += createCard(item);\n      } else {\n        markup += createCardPop(item);\n      }\n    });\n    markup += '</div>'; //close the title\n    readList.insertAdjacentHTML('beforeend', markup);\n  }\n  addEvtLisOnArrowBtn();\n}\n//функція, яка створює розмітку заголовка\nfunction createTitleMarcup(date) {\n  return `\n\t\t <li class=\"read__block\">\n\t\t\t <div class=\"read__title\">\n\t\t\t\t <div class=\"read__date\">\n\t\t\t\t\t <span class=\"date\">${formatDate(date)}</span>\n\t\t\t\t </div>\n\t\t\t \t <button type=\"button\" class=\"show-btn show-btn__up\" id='${date}'></button>\n\t\t\t </div>\n\t\t </li>\n\t\t <div class=\"read__gallery\" id='read__gallery-${date}'>`;\n}\n//функція відкриття/закриття випадаючого списку зі статтями\nfunction addEvtLisOnArrowBtn() {\n  const showButtons = document.querySelectorAll('.show-btn');\n  showButtons.forEach(button => {\n    const newsGallery = document.getElementById('read__gallery-' + button.id);\n    button.addEventListener('click', event => {\n      newsGallery.classList.toggle('hidden');\n      button.classList.toggle('show-btn__up');\n      button.classList.toggle('show-btn__down');\n    });\n  });\n}\nexport { addEvtListOnReadMore };\n"],"names":["$f8543ac8c27ed09a$export$d06a9030d8a3e30b","string","length","slice","$f8543ac8c27ed09a$export$6ef5b55ca4d37809","$f8543ac8c27ed09a$export$3ae94a2503e890a1","pubDate","Date","yyyy","getFullYear","mm","getMonth","dd","getDate","$ee9bc0ee28215c78$export$11e63f7b0f3d9900","key","serializedState","localStorage","getItem","undefined","JSON","parse","error","console","message","$addb2175690f7858$export$b7316deff43c35f7","section_name","web_url","headline","lead_paragraph","pub_date","multimedia","snippet","url","main","$addb2175690f7858$export$388c1356e5ac2621","media","title","section","subsection","abstract","published_date","caption","$98ddfb9032534e21$var$readList","document","querySelector","window","addEventListener","log","storageItems","sortedStorageArr","Object","keys","includes","sort","a","b","localeCompare","currentDate","markup","forEach","item","date","$98ddfb9032534e21$var$createTitleMarcup","insertAdjacentHTML","querySelectorAll","button","newsGallery","getElementById","id","event","classList","toggle"],"version":3,"file":"read.b08e8426.js.map"}