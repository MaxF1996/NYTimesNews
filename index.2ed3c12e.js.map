{"mappings":"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","sources":["src/js/fav/constants.js","src/js/fav/common.js","src/js/fav/mainHome.js"],"sourcesContent":["export { FAV_PAGES_KEY, OFFSETS_FAVORITES, MAX_WIDTH, NEWS_CARD_CSS_CLASSES, WEATHER_CARD_CSS_CLASS };\n\n\nconst FAV_PAGES_KEY = 'favPagesData';\nconst WEATHER_CARD_CSS_CLASS = 'weather__card';\n\n\nconst OFFSETS_FAVORITES = {\n    mobile: 5,\n    tablet: 8,\n    desktop: 9,\n};\nObject.freeze(OFFSETS_FAVORITES);\n\n\nconst MAX_WIDTH = {\n    mobile: 320,\n    tablet: 768,\n};\nObject.freeze(MAX_WIDTH);\n\n\nconst NEWS_CARD_CSS_CLASSES = {\n    container: 'news-container',\n    card: 'news-item',\n    favButton: 'add-news-favorite',\n    icon: 'favorite-icon',\n    \n    inFavorites: 'in-favorites',\n\n    title: 'news-title',\n    abstract: 'news-desk',\n    section: 'news-chip',\n    media: 'news-img',\n    published_date: 'news-date',\n    url: 'news-link',\n};\nObject.freeze(NEWS_CARD_CSS_CLASSES);","export { touchLocalStorageArr, getPagesOffset, newsCardsFavChecker, resolveFavClick };\nimport { FAV_PAGES_KEY, MAX_WIDTH, NEWS_CARD_CSS_CLASSES, WEATHER_CARD_CSS_CLASS } from \"./constants\";\n\n\nfunction getPagesOffset(offsetsStruct) {\n    if (window.matchMedia(`(max-width: ${MAX_WIDTH.mobile}px)`).matches) {\n        return offsetsStruct.mobile;\n    }\n    else if (window.matchMedia(`(max-width: ${MAX_WIDTH.tablet}px)`).matches) {\n        return offsetsStruct.tablet;\n    }\n    else {\n        return offsetsStruct.desktop;\n    }\n}\n\n// The function return data (array) from localStorage and can make changes with it using 'operatingFunc(array, data)' function\nfunction touchLocalStorageArr(key, incomingData = null, operatingFunc = null) {\n    let dataArr = [];\n    const storedData = localStorage.getItem(key);\n    if (storedData) {\n        try {\n            dataArr = JSON.parse(storedData);\n        } catch (error) {\n            console.log(error.message);\n        }\n    }\n    if (operatingFunc) {\n        operatingFunc(dataArr, incomingData);\n        localStorage.setItem(key, JSON.stringify(dataArr));\n    }\n    return dataArr;\n}\n\n\n// It finds a news card that corresponds to an event ('click') target.\nfunction getNewsCardNode(newsCardClassName, favButtonNode) {\n    let newsCardNode = favButtonNode;\n    while (!newsCardNode.classList.contains(newsCardClassName)) {\n        newsCardNode = newsCardNode.parentElement;\n    }\n    return newsCardNode;\n}\n\n\n// Checks for a news card in the storage\nfunction isInStorage(localStorageKey, newsCardNode) {\n    const title = newsCardNode.querySelector(`.${NEWS_CARD_CSS_CLASSES.title}`).textContent.trim();\n    const idx = touchLocalStorageArr(localStorageKey).findIndex(\n        struct => struct.title === title\n    );\n    return idx;\n}\n\n\nfunction removeCardFromFavorites(localStorageKey, idx, newsCardNode) {\n    touchLocalStorageArr(localStorageKey, idx, removeFromArr);\n    newsCardNode.querySelector(`.${NEWS_CARD_CSS_CLASSES.favButton}`).innerHTML = '<p class=\"favorite-btn-text\">Add to favorite</p><svg class=\"favorite-icon\" width=\"16\" height=\"16\"><use href=\"/sprite.f14d31f7.svg#heart-empty\" class=\"icon-empty-heart\"></use></svg>';\n}\nfunction removeFromArr(storageArr, idx) {\n    storageArr.splice(idx, 1);\n}\n\n\nfunction addCardToFavorites(localStorageKey, newsCardNode) {\n    touchLocalStorageArr(localStorageKey, newsCardNode, addToArr);\n    markCardFavorite(newsCardNode);\n}\nfunction addToArr(storageArr, newsCardNode) {\n    storageArr.unshift(collectData(newsCardNode));\n}\n\n\nfunction markCardFavorite(newsCardNode) {\n    newsCardNode.querySelector(`.${NEWS_CARD_CSS_CLASSES.favButton}`).innerHTML = '<p class=\"favorite-btn-text\">In favorite</p><svg class=\"favorite-icon\" style=\"fill: #4440F6;\" width=\"16\" height=\"16\"><use style=\"display: inline;\" href=\"/sprite.f14d31f7.svg#heart-fill\" class=\"icon-heart\"></use></svg>';\n};\n\n\nfunction collectData(newsCardNode) {\n    const dataStruct = {\n        media: [{\n            url: newsCardNode.querySelector(`.${NEWS_CARD_CSS_CLASSES.media}`).src,\n            caption: newsCardNode.querySelector(`.${NEWS_CARD_CSS_CLASSES.media}`).alt,\n        }],\n        title: newsCardNode.querySelector(`.${NEWS_CARD_CSS_CLASSES.title}`).textContent.trim(),\n        section: newsCardNode.querySelector(`.${NEWS_CARD_CSS_CLASSES.section}`).textContent,\n        subsection: '',\n        abstract: newsCardNode.querySelector(`.${NEWS_CARD_CSS_CLASSES.abstract}`).textContent,\n        published_date: newsCardNode.querySelector(`.${NEWS_CARD_CSS_CLASSES.published_date}`).textContent,\n        url: newsCardNode.querySelector(`.${NEWS_CARD_CSS_CLASSES.url}`).href,\n    };\n    return dataStruct;\n}\n\n\nfunction resolveFavClick(event) {\n    if (!( \n        event.target.classList.contains(NEWS_CARD_CSS_CLASSES.favButton) ||\n        event.target.parentNode.classList.contains(NEWS_CARD_CSS_CLASSES.favButton) ||\n        event.target.tagName === 'use'\n        )) {\n        return;\n    }\n\n    const newsCardNode = getNewsCardNode(NEWS_CARD_CSS_CLASSES.card, event.target);\n\n    const idx = isInStorage(FAV_PAGES_KEY, newsCardNode);\n    idx > -1 ?\n    removeCardFromFavorites(FAV_PAGES_KEY, idx, newsCardNode) :\n    addCardToFavorites(FAV_PAGES_KEY, newsCardNode);\n}\n\n\nfunction newsCardsFavChecker() {\n    const cards = document.querySelectorAll(`.${NEWS_CARD_CSS_CLASSES.card}`);\n    for (let card of cards) {\n        if (card.classList.contains(WEATHER_CARD_CSS_CLASS)) {\n            continue;\n        }\n        if (isInStorage(FAV_PAGES_KEY, card) > -1) {\n            markCardFavorite(card);\n        } \n    }\n}","import { NEWS_CARD_CSS_CLASSES } from \"./constants\";\nimport { resolveFavClick } from \"./common\";\n\nconst newsCardsContainer = document.querySelector(`.${NEWS_CARD_CSS_CLASSES.container}`);\nnewsCardsContainer.addEventListener('click', resolveFavClick);\n\n"],"names":["$8b4cce4c4083b238$export$c06779d5a2652ef1","Object","freeze","mobile","tablet","desktop","$8b4cce4c4083b238$export$157e21b1e4c118d6","$8b4cce4c4083b238$export$58ddb6401142758f","container","card","favButton","icon","inFavorites","title","abstract","section","media","published_date","url","$8e922cfb642864d2$export$1620fbff1aadac46","key","incomingData","arguments","length","operatingFunc","dataArr","storedData","localStorage","getItem","JSON","parse","error","console","log","message","setItem","stringify","$8e922cfb642864d2$var$isInStorage","localStorageKey","newsCardNode","querySelector","concat","textContent","trim","findIndex","struct","$8e922cfb642864d2$var$removeFromArr","storageArr","idx","splice","$8e922cfb642864d2$var$addToArr","unshift","src","caption","alt","subsection","href","$8e922cfb642864d2$var$collectData","$8e922cfb642864d2$var$markCardFavorite","innerHTML","document","addEventListener","event","target","classList","contains","parentNode","tagName","newsCardClassName","favButtonNode","parentElement","$8e922cfb642864d2$var$getNewsCardNode","$8e922cfb642864d2$var$removeCardFromFavorites","$8e922cfb642864d2$var$addCardToFavorites"],"version":3,"file":"index.2ed3c12e.js.map"}